{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React 2\\\\nextjs-demo-project\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from 'mongodb';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}; // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an api or database\n//   return {\n//       props:{\n//           meetups: DummyData\n//       }\n//   }\n// }\n// this func runs at build time before the component renders\n\n\nexport async function getStaticProps() {\n  // fetch data from an api or database\n  const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}).toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["E:/React 2/nextjs-demo-project/pages/index.js"],"names":["React","MeetupList","MongoClient","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAoB,oGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2BC,OAA3B,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACHV,IAAAA,KAAK,EAAC;AACFC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAM,KAAK;AAC/BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADiB;AAE/BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFe;AAG/BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHiB;AAI/BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ2B,OAAL,CAAnB;AADP,KADH;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH;AAED,eAAepB,QAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport {MongoClient} from 'mongodb';\r\n\r\nconst HomePage = (props) => {\r\n  \r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n//   // fetch data from an api or database\r\n//   return {\r\n//       props:{\r\n//           meetups: DummyData\r\n//       }\r\n//   }\r\n// }\r\n\r\n// this func runs at build time before the component renders\r\nexport async function getStaticProps() {\r\n    // fetch data from an api or database\r\n    const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}).toArray();\r\n    client.close();\r\n    return {\r\n        props:{\r\n            meetups: meetups.map( meetup => ({\r\n              title: meetup.title,\r\n              address: meetup.address,\r\n              image: meetup.image,\r\n              id: meetup._id.toString()\r\n            }))\r\n        },\r\n        revalidate: 10\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}