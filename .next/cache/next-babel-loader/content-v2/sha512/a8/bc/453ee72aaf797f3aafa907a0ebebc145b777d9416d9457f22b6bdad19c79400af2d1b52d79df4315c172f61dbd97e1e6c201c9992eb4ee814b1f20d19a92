{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React 2\\\\nextjs-demo-project\\\\pages\\\\[meetupId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst MeetupmainDetail = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //   {\n    //     params: {\n    //       meetupId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: \"m2\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup from db\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedmeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close(); // console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: _objectSpread({\n        id: selectedmeetup._id\n      }, selectedmeetup)\n    }\n  };\n}\nexport default MeetupmainDetail;","map":{"version":3,"sources":["E:/React 2/nextjs-demo-project/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","ObjectId","MeetupmainDetail","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedmeetup","findOne","close","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAoBC,QAApB,QAAmC,SAAnC;;AAGA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,oGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAC;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AAAT,KAAL,CAAnB,CAFF,CAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfK,GAAP;AAiBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,oGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAACZ,IAAAA,GAAG,EAAEhB,QAAQ,CAACuB,QAAD;AAAd,GAA1B,CAA7B;AACAd,EAAAA,MAAM,CAACoB,KAAP,GAP4C,CAQ5C;;AACA,SAAO;AACL3B,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU;AACR2B,QAAAA,EAAE,EAAEH,cAAc,CAACX;AADX,SAELW,cAFK;AADL;AADF,GAAP;AAQD;AAED,eAAe1B,gBAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient,ObjectId} from 'mongodb';\r\n\r\n\r\nconst MeetupmainDetail = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map( meetup => ({ params:{ meetupId: meetup._id.toString()}}))\r\n    \r\n    // [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup from db\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedmeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n  client.close();\r\n  // console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedmeetup._id,\r\n        ...selectedmeetup\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupmainDetail;\r\n"]},"metadata":{},"sourceType":"module"}