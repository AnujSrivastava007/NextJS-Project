{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\React 2\\\\nextjs-demo-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupmainDetail = function MeetupmainDetail(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetuata.image,\n    title: props.meetupdata.title,\n    address: props.meetupdata.address,\n    description: props.meetupdata.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupmainDetail;\nexport var __N_SSG = true;\nexport default MeetupmainDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupmainDetail\");","map":{"version":3,"sources":["E:/React 2/nextjs-demo-project/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MeetupmainDetail","props","meetuata","image","meetupdata","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeC,KADxB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACG,UAAN,CAAiBC,KAF1B;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,OAH5B;AAIE,IAAA,WAAW,EAAEL,KAAK,CAACG,UAAN,CAAiBG;AAJhC;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMP,gB;;AAqDN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport {MongoClient} from 'mongodb';\r\n\r\n\r\nconst MeetupmainDetail = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetuata.image}\r\n      title={props.meetupdata.title}\r\n      address={props.meetupdata.address}\r\n      description={props.meetupdata.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map( meetup => ({ params:{ meetupId: meetup._id.toString()}}))\r\n    \r\n    // [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup from db\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect('mongodb+srv://Anuj:2RRhM2JXbupjD4Et@cluster0.mtrhp.mongodb.net/meetups?retryWrites=true&w=majority')\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedmeetup = await meetupsCollection.findOne({_id:meetupId}).\r\n  client.close();\r\n  // console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: selectedmeetup\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupmainDetail;\r\n"]},"metadata":{},"sourceType":"module"}